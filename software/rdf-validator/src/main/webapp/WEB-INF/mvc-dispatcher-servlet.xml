<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
    	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 
	<context:component-scan base-package="RDFValidation.controller" />
 
 	<!-- place where all static resources go -->
 	<!--<mvc:resources mapping="/resources/**" location="/resources/" />-->
 	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:annotation-driven />
 
 	<!-- freemarker configuration -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
	
	  <!-- spring scans this template loader path to find the appropriate freemarker template for the specified view -->
	  <property name="templateLoaderPaths">
        <list>
          <value>/WEB-INF/ftl/</value>
          <value>/WEB-INF/ftl/dsp</value>
          <value>/WEB-INF/ftl/dsp2</value>
          <value>/WEB-INF/ftl/owl2</value>
          <value>/WEB-INF/ftl/gclo</value>
          <value>/WEB-INF/ftl/skos</value>
          <value>/WEB-INF/ftl/xkos</value>
          <value>/WEB-INF/ftl/shex</value>
          <value>/WEB-INF/ftl/rs</value>
          <value>/WEB-INF/ftl/datacube</value>
          <value>/WEB-INF/ftl/dcat</value>
          <value>/WEB-INF/ftl/disco</value>
          <value>/WEB-INF/ftl/phdd</value>
        </list>
      </property>
      
	  <property name="freemarkerSettings">
	    <props>
	   	  <prop key="default_encoding">UTF-8</prop>
	   	  <prop key="auto_import">macros/layoutMacros.ftl as layout, macros/contentMacros.ftl as content, macros/formMacros.ftl as forms, spring.ftl as spring, macros/navigationMacros.ftl as navigation</prop>
	   	</props>
	  </property>
    	
      <!-- a list of variables that might be accessed from within a template -->
      <property name="freemarkerVariables">
    	<map>
    	  <entry key="foo" value="foo" />
    	</map>
      </property>
      
	</bean>
	
	<bean id="freemarkerConfiguration" class="freemarker.template.Configuration" />
	
	<!-- 
	  View resolvers can also be configured with ResourceBundles or XML files. If you need
	  different view resolving based on Locale, you have to use the resource bundle resolver.
	-->
	<!-- 
	view resolver:
	
	- resolves the freemarker template view
    - specifies the template engine ( e.g. freemarker, velocity ) 
    -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	  <!-- <property name="cache" value="true"/> -->
	  <property name="cache" value="false"/>
	  <property name="contentType" value="text/html;charset=UTF-8"/>
      <property name="exposeSessionAttributes" value="true" />
      <property name="exposeSpringMacroHelpers" value="true"/>
      <property name="allowSessionOverride" value="true" />
	  <property name="prefix" value=""/>
	  <property name="suffix" value=".ftl"/>
	  <!-- 
	  ApplicationContent: 
	  	Context holder for request-specific state, 
        like current web application context, current locale, current theme, potential binding errors.
        This property makes the request context available to the view resolver, i.e. template engine in our case 
      -->
      <property name="requestContextAttribute" value="rc" />
	</bean>

	<!-- allows Sping to load all components from the specified package and its sub-packages -->
    <context:component-scan base-package="rdfValidation" />
 
	<!-- 
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	-->
	
	<!--  bean for file upload -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
 
</beans>