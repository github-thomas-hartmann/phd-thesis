<project 
  xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>RDFValidation</groupId>
  <artifactId>RDFValidation</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>RDFValidation</name>
  <url>http://maven.apache.org</url>
  
  <!-- versions -->
  <properties>
	<spring.version>4.0.5.RELEASE</spring.version>
	<org.springframework.version>4.0.5.RELEASE</org.springframework.version>
	<junit.version>4.11</junit.version>
	<jdk.version>1.6</jdk.version>
	<jetty.version>8.1.8.v20121106</jetty.version>
	<freemarker.version>2.3.20</freemarker.version>
	<spin.version>1.4.0</spin.version>
	<jena.version>2.11.2</jena.version>
	<tomcat.servlet.api.version>6.0.41</tomcat.servlet.api.version>
	<commonsio.version>2.4</commonsio.version>
	<commons.lang3.version>3.0</commons.lang3.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.1</version>
      <scope>provided</scope>
    </dependency>
    
		<!--
		    Core utilities used by other modules.
		    Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-core</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Expression Language (depends on spring-core)
		    Define this if you use Spring Expression APIs (org.springframework.expression.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-expression</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!-- 
		    Bean Factory and JavaBeans utilities (depends on spring-core)
		    Define this if you use Spring Bean APIs (org.springframework.beans.*) 
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-beans</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
		    Define this if you use Spring AOP APIs (org.springframework.aop.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-aop</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) 
		    This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
		    Define this if you need any of these integrations
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context-support</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
		    Define this if you use Spring Transactions or DAO Exception Hierarchy
		    (org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-tx</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
		    Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-jdbc</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
		    (depends on spring-core, spring-beans, spring-context, spring-tx)
		    Define this if you need ORM (org.springframework.orm.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-orm</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
		    (depends on spring-core, spring-beans, spring-context)
		    Define this if you need OXM (org.springframework.oxm.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-oxm</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Web application development utilities applicable to both Servlet and Portlet Environments
		    (depends on spring-core, spring-beans, spring-context)
		    Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-web</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-webmvc</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
		    Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-webmvc-portlet</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
		    Support for testing Spring applications with tools such as JUnit and TestNG
		    This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-test</artifactId>
		  <version>${org.springframework.version}</version>
		  <scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- freemarker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>${freemarker.version}</version>
		</dependency>
		
		<!-- SPIN -->
		<dependency>
	    	<groupId>org.topbraid</groupId>
	    	<artifactId>spin</artifactId>
	    	<version>${spin.version}</version>
	    </dependency>
	    
	    <!-- JENA -->
	    <dependency>
		    <groupId>org.apache.jena</groupId>
		    <artifactId>apache-jena-libs</artifactId>
		    <type>pom</type>
		    <version>${jena.version}</version>
		  </dependency>
		  
		<!-- tomcat servlet api -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${tomcat.servlet.api.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commonsio.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.12</version>
		</dependency>
		
	    <dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.12</version>
		</dependency>
		
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2</version>
		</dependency>
			
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang3.version}</version>
		</dependency>
		
		<dependency>
			<groupId>net.sf.trove4j</groupId>
			<artifactId>trove4j</artifactId>
			<version>3.0.3</version>
		</dependency>
		
		<dependency>
		  	<groupId>org.openrdf.sesame</groupId>
		  	<artifactId>sesame-runtime</artifactId>
		  	<version>2.8.1</version>
		</dependency>
    
  </dependencies>
  
	<repositories>
	
		<!-- SPIN -->
	    <repository>
	        <id>org.topbraid</id>
	        <url>http://topquadrant.com/repository/spin</url>
	    </repository>
	    
	</repositories>

  <build>
    <plugins>
    
      <!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.4</source>
          <target>1.4</target>
        </configuration>
      </plugin>
      -->
      
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-compiler-plugin</artifactId>
        <version>7</version>
      </plugin>
    </plugins>
    
	<resources>
	  <resource>
	    <directory>src/main/resources</directory>
	    <filtering>true</filtering>
	  </resource>
	</resources>
    
  </build>
</project>
